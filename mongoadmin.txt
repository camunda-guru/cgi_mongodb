use admin
db.createUser(
  {
    user: "myUserAdmin",
    pwd: "abc123",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" },
{ role: "readWrite", db: "test" }

 ]
  }
)


db.updateUser("eswari",
{
 roles:[ { role: "userAdminAnyDatabase", db: "admin" },
{ role: "readWrite", db: "test" }],
 pwd:"test@123"

}


)


mongod --auth --port 27017 --dbpath f:\niit_mongodb











mongo --port 27017 -u "myUserAdmin" -p "abc123" 
--authenticationDatabase "admin

To authenticate after connecting



mongo --port 27017
use admin
db.auth("myUserAdmin", "abc123" )

Create additional users as needed for your deployment.

use test
db.createUser(
  {
    user: "myTester",
    pwd: "xyz123",
    roles: [ { role: "readWrite", db: "test" },
             { role: "read", db: "reporting" } ]
  }
)
db.updateUser("eswari",
{
 roles:[{ role: "readWrite", db: "test" }],
 pwd:"test@123"

}


)

"roles" : [
   { "role" : "readWrite", "db" : "accounts" },
   { "role" : "read", "db" : "reporting" },
   { "role" : "read", "db" : "products" },
   { "role" : "read", "db" : "sales" }
]



mongo --port 27017 -u "myTester" -p "xyz123" --authenticationDatabase "test"

use test
db.auth("myTester", "xyz123" )

-------------------------------------------

backup and restore


mongodump --db Customer --out f:\niit_mongodb\backup

mongorestore --db Customer --drop f:\niit_mongodb\backup\Customer

------------------------------------------------

mongoexport --db test --collection statemodels --type=csv 
--fields stateId,name --out f:\niit_mongodb\exports\states.csv


mongoexport --db happytripdb --collection statemodels --type=csv 
--fields stateId,name --out f:\niit_mongodb\exports\statedata.csv





